version: "2.4"

services:
  proxy:
    image: traefik:{% if traefik_version < 3 %}2.9{% else %}3.1.0{% endif %}
    container_name: "traefik"
    networks:
      shared:
        aliases: []
      private:
      public:
    ports:
      - 80:80
      - 443:443
    {%- if postgres_exposed and postgres_exposed_port and traefik_version == 3 %}
      - "{{ postgres_exposed_port }}:5432"
    {%- endif %}
    volumes:
      - acme:/etc/traefik/acme:rw,Z
    depends_on:
      - dockersocket
    restart: unless-stopped
    tty: true
    command:
      - "--log.level=info"
      - "--api.insecure=false"
      - "--global.checkNewVersion=false"
      - "--global.sendAnonymousUsage=false"
      - "--providers.docker.endpoint=http://dockersocket:2375"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=inverseproxy_shared"
      - "--providers.docker=true"
      - "--entrypoints.web-insecure.address=:80"
      - "--entrypoints.web-insecure.http.redirections.entryPoint.to=web-main"
      - "--entrypoints.web-insecure.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-main.address=:443"
      - "--entrypoints.web-main.transport.respondingTimeouts.readTimeout=3600s"
      - "--entrypoints.web-main.http.tls.certResolver=letsencrypt"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email={{ ssl_email }}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web-insecure"
    {%- if postgres_exposed and postgres_exposed_port and traefik_version == 3 %}
      - "--entrypoints.postgres-entrypoint.address=:{{ postgres_exposed_port }}"
    {%- endif %}
    {%- if enable_traefik_dashboard == true %}
      - "--api.dashboard=true"
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.dashboard-wwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.dashboard-wwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.dashboard-wwwredirect.redirectregex.permanent=true
      - traefik.http.middlewares.dashboard-auth.basicauth.users={{ traefik_dashboard_user }}:{{ traefik_dashboard_password }}
      - traefik.http.routers.dashboard.rule=Host(`{{ traefik_dashboard_domain }}`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entryPoints=web-insecure,web-main
      - traefik.http.routers.dashboard.middlewares=dashboard-wwwredirect,dashboard-auth,
      - traefik.http.routers.www-dashboard.rule=Host(`www.{{ traefik_dashboard_domain }}`)
      - traefik.http.routers.www-dashboard.service=api@internal
      - traefik.http.routers.www-dashboard.entrypoints=web-insecure,web-main
      - traefik.http.routers.www-dashboard.middlewares=dashboard-wwwredirect
    {%- endif %}
  dockersocket:
    image: tecnativa/docker-socket-proxy
    privileged: true
    networks:
      private:
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      SWARM: 1
      TASKS: 1
    restart: unless-stopped

networks:
  public:
    driver_opts:
      encrypted: 1
  shared:
    internal: true
    driver_opts:
      encrypted: 1
  private:
    internal: true
    driver_opts:
      encrypted: 1
volumes:
  acme:
