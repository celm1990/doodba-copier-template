name: ci

on:
  push:

jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
{%- if odoo_version < 11 %}
        with:
          python-version: "2.7"
{%- elif odoo_version < 14 %}
        with:
          python-version: "3.7"
{%- else %}
        with:
          python-version: "3.10"
{%- endif %}
      - name: Get python version
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure --color=always
        env:
          # Consider valid a PR that changes README fragments but doesn't
          # change the README.rst file itself. It's not really a problem
          # because the bot will update it anyway after merge. This way, we
          # lower the barrier for functional contributors that want to fix the
          # readme fragments, while still letting developers get README
          # auto-generated (which also helps functionals when using runboat).
          # DOCS https://pre-commit.com/#temporarily-disabling-hooks
          SKIP: oca-gen-addon-readme
      - name: Check that all files generated by pre-commit are in git
        run: |
          newfiles="$(git ls-files --others --exclude-from=.gitignore)"
          if [ "$newfiles" != "" ] ; then
              echo "Please check-in the following files:"
              echo "$newfiles"
              exit 1
          fi
  docker:
    runs-on: ubuntu-22.04
    needs: pre-commit
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Register
        uses: docker/login-action@v2
        with:
          registry: {{ docker_registry }}
          username: {{ "${{ secrets.REGISTER_USERNAME }}" }}
          password: {{ "${{ secrets.REGISTER_TOKEN }}" }}
      - name: Build Image
        id: build
        env:
          GIT_TOKEN: {{ "${{ secrets.GIT_TOKEN }}" }}
        run: |
          docker compose --file ./inverseproxy/traefik.yaml --project-name inverseproxy up -d --remove-orphans
          docker compose --file prod.yaml --project-name odoo up -d --build --remove-orphans
          docker compose --file prod.yaml --project-name odoo down
      - name: Verificar Addons en Private
        id: list_private
        run: |
          private_addons_count=$(docker compose --file prod.yaml --project-name odoo run --rm odoo find /opt/odoo/custom/src/private -mindepth 1 -type d | wc -l)
          echo "private_addons_count: $private_addons_count"
          echo "PRIVATE_ADDONS_COUNT=$private_addons_count" >> "$GITHUB_OUTPUT"
      - name: Install addons
        id: install
        if: {{ "${{ steps.list_private.outputs.PRIVATE_ADDONS_COUNT > 0 }}" }}
        run: |
          docker compose --file prod.yaml --project-name odoo run --rm odoo addons init --private
          addons_list=$(docker compose --file prod.yaml --project-name odoo run --rm odoo addons list --private)
          path_addons_list=$(docker compose --file prod.yaml --project-name odoo run --rm odoo addons list -f --private)
          echo "addons_list: $addons_list"
          echo "path_addons_list: $path_addons_list"
          echo "ADDONS_LIST=$addons_list" >> "$GITHUB_OUTPUT"
          echo "PATH_ADDONS_LIST=$path_addons_list" >> "$GITHUB_OUTPUT"
      - name: Test addons
        id: test
        if: {{ "${{ steps.list_private.outputs.PRIVATE_ADDONS_COUNT > 0 }}" }}
        env:
          ADDONS_LIST: {{ "${{ steps.install.outputs.ADDONS_LIST }}" }}
          PATH_ADDONS_LIST: {{ "${{ steps.install.outputs.PATH_ADDONS_LIST }}" }}
        run: |
          docker compose --file prod.yaml --project-name odoo run --rm odoo \
            coverage run \
              --branch \
              --omit '*/__openerp__.py,*/__manifest__.py,/opt/odoo/custom/src/*/*/__init__.py' \
              --data-file=/var/lib/odoo/coverage \
              --source $PATH_ADDONS_LIST \
              -m odoo --stop-after-init --workers=0 --test-enable --init $ADDONS_LIST
          docker compose --file prod.yaml --project-name odoo run --rm odoo \
            coverage report -m --data-file=/var/lib/odoo/coverage
          docker compose --file prod.yaml --project-name odoo run --rm odoo \
            coverage xml --data-file=/var/lib/odoo/coverage -o /var/lib/odoo/coverage.xml
      - name: Copy coverage.xml to host
        if: {{ "${{ steps.list_private.outputs.PRIVATE_ADDONS_COUNT > 0 }}" }}
        run: |
          docker compose --file prod.yaml --project-name odoo run --name odoo -d --rm odoo tail -f /dev/null
          docker cp odoo:/var/lib/odoo/coverage.xml ./coverage.xml
          docker compose --file prod.yaml --project-name odoo down
      - uses: codecov/codecov-action@v3.1.6
        if: {{ "${{ steps.list_private.outputs.PRIVATE_ADDONS_COUNT > 0 }}" }}
        with:
          token: {{ "${{ secrets.CODECOV_TOKEN }}" }}
          fail_ci_if_error: true # optional (default = false)
          flags: unittests
          verbose: true
      - name: Push Image
        id: push
        run: |
          docker image list
          docker tag {{ odoo_oci_image }}:{{ project_name }}-{{ odoo_version }} {{ odoo_oci_image }}:{{ project_name }}-{{ "${{ github.ref_name }}" }}
          docker tag {{ odoo_oci_image }}:{{ project_name }}-{{ odoo_version }} {{ odoo_oci_image }}:{{ project_name }}-{{ "${{ github.ref_name }}" }}-{{ "${{ github.sha }}" }}
          docker push {{ odoo_oci_image }}:{{ project_name }}-{{ "${{ github.ref_name }}" }}
          docker push {{ odoo_oci_image }}:{{ project_name }}-{{ "${{ github.ref_name }}" }}-{{ "${{ github.sha }}" }}
